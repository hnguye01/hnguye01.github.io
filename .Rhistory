knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
knitr::include_graphics("/Users/Jaco/Desktop/SMU/DS_6306_Doing_Data_Science/Unit_8_9_CaseStudy1/presentations")
# As data scientists for Budweiser we were thrilled to help decide on new release beers that will compete with the booming microbrewery growth in the United States. This review will contain an analysis of beer bitterness (or IBU) and alcohol by volume (or ABV) by state. This will lead into our recommendations for new beer releases by regional market in the US. We expect Budweiser to be able to compete and excel in this rapidly expanding sector.
library(tidyverse)
library(ggthemes)
library(dplyr)
library(highcharter)
library(ggmap)
library(ggExtra)
library(treemapify)
library(maps)
library(naniar)
library(knitr)
library(revealjs)
library(htmltools)
library(viridisLite)
library(treemap)
library(RColorBrewer)
library(class)
library(caret)
library(VIM)
library(lattice)
library(mice)
breweries <- read.csv("https://raw.githubusercontent.com/BivinSadler/MDS-6306-Doing-Data-Science-Fall-2019/master/Unit%208%20and%209%20Case%20Study%201/Breweries.csv", header = TRUE, strip.white=TRUE)
#str(breweries)
#nrow(breweries)
#summary(breweries)
#glimpse(breweries)
mapdata <- get_data_from_map(download_map_data("countries/us/us-all"))
#glimpse(mapdata)
#glimpse(breweries)
breweryGeo <- data.frame(table(breweries$State))
colnames(breweryGeo) <- c("code", "Breweries")
breweryGeo$StateNam <- state.name[match(breweryGeo$code, state.abb)]
#glimpse(breweryGeo)
breweryGeo <- filter(breweryGeo, !is.na(code))
#glimpse(breweryGeo)
breweryGeo$Breweries <- as.numeric(breweryGeo$Breweries)
breweryGeo$State <- as.character(breweryGeo$code)
#glimpse(breweryGeo)
#glimpse(breweryGeo)
#str(breweryGeo)
colBreweries <- hcmap("countries/us/us-all", data = breweryGeo, value = "Breweries",
joinBy = c("hc-a2", "code"),
title = "Breweries by State",
name = "Number of Breweries",
dataLabels = list(enabled = TRUE, format = '{point.name}'),
borderColor = "#FAFAFA", borderWidth = 0.1,
tooltip = list()
)
hc_colorAxis(colBreweries, min = 1,
max = 50,
#type = 'logarithmic',
minColor = '#f1ccc7',
maxColor = '#a83b2a',
lineColor = 'black',
lineWidth = .5
)
# In the above geo map we can tell there is a large distribution of breweries throughout the United States. California, Colorado, Michigan, and Oregon are all some of the leaders in microbreweries in the US. Texas gets an honorable mention and is not close behind.
beers <- read.csv("https://raw.githubusercontent.com/BivinSadler/MDS-6306-Doing-Data-Science-Fall-2019/master/Unit%208%20and%209%20Case%20Study%201/Beers.csv", header = TRUE)
#str(beers)
#glimpse(beers)
beers <-  beers %>% dplyr::rename( Brew_ID = Brewery_id)
#glimpse(beers)
breweries <- breweries %>% dplyr::rename(Name_Brew = Name)
beers <- beers %>% dplyr::rename(Name_Beer = Name)
#glimpse(breweries)
#glimpse(beers)
brew.beer <- full_join(breweries, beers, by = "Brew_ID")
#str(brew.beer)
#glimpse(brew.beer)
invisible(brew.beer %>% head(6))
invisible(brew.beer %>% tail(6))
brew.beer.cleanABV <- brew.beer %>% filter(!is.na(ABV))
brew.beerABV <- aggregate(brew.beer.cleanABV$ABV, by=list(brew.beer.cleanABV$State), FUN = median)
#glimpse(brew.beerABV)
colnames(brew.beerABV) <- c("State", "MedABV")
#glimpse(brew.beerABV)
brew.beerABV <- mutate(brew.beerABV, ABVper = MedABV * 100)
#glimpse(brew.beerABV)
brew.beerABV <- brew.beerABV[order(brew.beerABV$MedABV),]
brew.beerABV$State <- factor(brew.beerABV$State, levels = brew.beerABV$State)
brew.beerABV %>% ggplot(mapping = aes(x=State, y=ABVper))  +
geom_bar(stat = "identity", fill = "dark green") +
theme_excel_new() +
theme(legend.position="none", axis.text.x = element_text(angle=65, vjust=0.1)) +
ggtitle("Median ABV by State") + ylab("ABV") + xlab("State")
brew.beerABV$code <- brew.beerABV$State
#glimpse(brew.beerABV)
#summary(brew.beerABV)
#nrow(brew.beerABV)
colorABV <- hcmap("countries/us/us-all", data = brew.beerABV, value = "ABVper",
joinBy = c("hc-a2", "code"), name = "ABV",
dataLabels = list(enabled = TRUE, format = '{point.name}'),
borderColor = "#FAFAFA", borderWidth = 0.1,
tooltip = list(valueDecimals = 2, valueSuffix = "%")
)
hc_colorAxis(colorABV, min = 3,
max = 7,
#type = 'logarithmic',
minColor = '#ffffff',
maxColor = '#003400',
lineColor = 'black',
lineWidth = .5
)
# In reviewing our bar chart of Median ABV by state, you can see that there is not a lot of variation in median ABV when comparing state to state. This tells us that while there may be some high ABVs present, normally most breweries fall within a relatively narrow range. To further show this closeness in Median ABV, we see here our geo map does not have a large range in gradient color.
#glimpse(brew.beer)
maxABV <- data.frame(brew.beer[which.max(brew.beer$ABV),])
#maxABV
maxABV <- mutate(maxABV, ABVper = ABV * 100)
#maxABV
maxABV$code <- maxABV$State
colorMaxABV <- hcmap("countries/us/us-all", data = maxABV, value = "ABVper",
joinBy = c("hc-a2", "code"), name = "ABV",
dataLabels = list(enabled = TRUE, format = '{point.name}'),
borderColor = "#FAFAFA", borderWidth = 0.1,
tooltip = list(valueDecimals = 1, valueSuffix = "%"))
hc_colorAxis(colorMaxABV, min = 3,
max = 7,
#type = 'logarithmic',
minColor = '#003400',
maxColor = '#003400',
lineColor = 'black',
lineWidth = .5
)
MedianABV <- brew.beer.cleanABV %>% group_by(State) %>% summarise(medABV = median(c(ABV)))
MedABVper <- mutate(MedianABV, ABVper = medABV * 100)
#summary(MedianABV)
MedABVper %>% ggplot(mapping = aes(y = ABVper)) +
geom_boxplot(fill = "dark green", color = "black") +
theme_excel_new() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
ggtitle("Median ABV Distribution") + ylab("Median ABV") + xlab("ABV")
# In reviewing this boxplot, we can see our Median ABV distribution is small. The majority of the beers (75%) that are produced fall between 5.5% - 5.8%.  This is slightly higher than the mass-produced Budweiser products of 4.2%. Whenever local consumers are given an option, they are likely to choose a microbrew that contains a slightly higher ABV than Budweiserâ€™s traditional products. For this reason, we will be recommending new Budweiser releases by region of a different ABV than what Budweiser is used to.
brew.beer.cleanIBU <- brew.beer %>% filter(!is.na(IBU))
brew.beerIBU <- aggregate(brew.beer.cleanIBU$IBU, by=list(brew.beer.cleanIBU$State), FUN = median)
#glimpse(brew.beerIBU)
colnames(brew.beerIBU) <- c("State", "MedIBU")
#glimpse(brew.beerIBU)
brew.beerIBU <- brew.beerIBU[order(brew.beerIBU$MedIBU),]
brew.beerIBU$State <- factor(brew.beerIBU$State, levels = brew.beerIBU$State)
brew.beerIBU %>% ggplot(mapping = aes(x=State, y=MedIBU)) +
geom_bar(stat = "identity", fill = "dark blue") +
theme_excel_new() +
theme(legend.position="none", axis.text.x = element_text(angle=65, vjust=0.6)) +
ggtitle("Median IBU by State") + ylab("IBU") + xlab("State")
brew.beerIBU$code <- brew.beerIBU$State
#glimpse(brew.beerIBU)
#summary(brew.beerIBU)
#nrow(brew.beerIBU)
sd <- data.frame("SD", 0, "SD")
colnames(sd) <- c("State", "MedIBU", "code")
#sd
brew.beerIBU <- rbind(brew.beerIBU, sd)
breweryGeo <- data.frame(table(breweries$State))
colnames(breweryGeo) <- c("code", "Breweries")
#glimpse(brew.beerIBU)
colorIBU <- hcmap("countries/us/us-all", data = brew.beerIBU, value = "MedIBU",
joinBy = c("hc-a2", "code"), name = "IBU",
dataLabels = list(enabled = TRUE, format = '{point.name}'),
borderColor = "#FAFAFA", borderWidth = 0.1,
tooltip = list(valueDecimals = 1))
hc_colorAxis(colorIBU, min = 18,
max = 62,
#type = 'logarithmic',
minColor = '#ffffff',
maxColor = '#000080',
lineColor = 'black',
lineWidth = .5
)
# We can tell from our gradient geo map that the median IBU varies greatly between states. There are a lot of beers with many different measure for this characteristic of beer. Unlike ABV (which falls in a smaller range), IBU has a lot of possibilities for the new release beers for Budweiser.
#glimpse(brew.beer)
maxIBU <- data.frame(brew.beer[which.max(brew.beer$IBU),])
#maxIBU
maxIBU$code <- maxIBU$State
colorMaxIBU <- hcmap("countries/us/us-all", data = maxIBU, value = "IBU",
joinBy = c("hc-a2", "code"), name = "IBU",
dataLabels = list(enabled = TRUE, format = '{point.name}'),
borderColor = "#FAFAFA", borderWidth = 0.1,
tooltip = list(valueDecimals = 1))
hc_colorAxis(colorMaxIBU, min = 18,
max = 62,
#type = 'logarithmic',
minColor = '#ffffff',
maxColor = '#000080',
lineColor = 'black',
lineWidth = .5
)
brew.beer.cleanIBU <- brew.beer %>% filter(!is.na(IBU))
MedianIBU <- brew.beer.cleanIBU %>% group_by(State) %>% summarise(medIBU = median(c(IBU)))
#summary(MedianIBU)
MedianIBU %>% ggplot(mapping = aes(y = medIBU)) +
geom_boxplot(fill = "dark blue", color = "black") +
theme_excel_new() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
ggtitle("Median IBU Distribution") + ylab("Median IBU") + xlab("")
# IBU is measured on a scale from 1 to 100. This scale measures the amount of isomerizes alpha acids in a beer. In general, the standard IBU of Budweiser is 7. When we review the above plots, we can see the range of median IBU level in beer produced by microbreweries is around 30-43 (75%). These medians are higher than the IBU of Budweiser. For this reason, we recommend that new Budweiser release beers will be higher in IBU than the traditional products.
#brew.beer
brew.beerABVper <- mutate(brew.beer, ABVper = ABV * 100)
#glimpse(brew.beerABVper)
ggMarginal(brew.beerABVper %>% ggplot(mapping = aes(x=IBU, y=ABVper)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_excel_new() +
ggtitle("Bitterness (IBU) vs Alcoholic Content (IBV)") + ylab("IBU") + xlab("ABV"), type = "densigram", fill = "blue")
#glimpse(brew.beerABVper)
brew.beerABVper$Region[brew.beerABVper$State == "ME"] <- "Northeast"
brew.beerABVper$Region[brew.beerABVper$State == "NH"] <- "Northeast"
brew.beerABVper$Region[brew.beerABVper$State == "VT"] <- "Northeast"
brew.beerABVper$Region[brew.beerABVper$State == "MA"] <- "Northeast"
brew.beerABVper$Region[brew.beerABVper$State == "RI"] <- "Northeast"
brew.beerABVper$Region[brew.beerABVper$State == "CT"] <- "Northeast"
brew.beerABVper$Region[brew.beerABVper$State == "NY"] <- "Northeast"
brew.beerABVper$Region[brew.beerABVper$State == "NJ"] <- "Northeast"
brew.beerABVper$Region[brew.beerABVper$State == "PA"] <- "Northeast"
brew.beerABVper$Region[brew.beerABVper$State == "ND"] <- "Midwest"
brew.beerABVper$Region[brew.beerABVper$State == "SD"] <- "Midwest"
brew.beerABVper$Region[brew.beerABVper$State == "NE"] <- "Midwest"
brew.beerABVper$Region[brew.beerABVper$State == "KS"] <- "Midwest"
brew.beerABVper$Region[brew.beerABVper$State == "MN"] <- "Midwest"
brew.beerABVper$Region[brew.beerABVper$State == "IA"] <- "Midwest"
brew.beerABVper$Region[brew.beerABVper$State == "MO"] <- "Midwest"
brew.beerABVper$Region[brew.beerABVper$State == "WI"] <- "Midwest"
brew.beerABVper$Region[brew.beerABVper$State == "IL"] <- "Midwest"
brew.beerABVper$Region[brew.beerABVper$State == "IN"] <- "Midwest"
brew.beerABVper$Region[brew.beerABVper$State == "MI"] <- "Midwest"
brew.beerABVper$Region[brew.beerABVper$State == "OH"] <- "Midwest"
brew.beerABVper$Region[brew.beerABVper$State == "OK"] <- "South"
brew.beerABVper$Region[brew.beerABVper$State == "TX"] <- "South"
brew.beerABVper$Region[brew.beerABVper$State == "AR"] <- "South"
brew.beerABVper$Region[brew.beerABVper$State == "LA"] <- "South"
brew.beerABVper$Region[brew.beerABVper$State == "MS"] <- "South"
brew.beerABVper$Region[brew.beerABVper$State == "KY"] <- "South"
brew.beerABVper$Region[brew.beerABVper$State == "TN"] <- "South"
brew.beerABVper$Region[brew.beerABVper$State == "AL"] <- "South"
brew.beerABVper$Region[brew.beerABVper$State == "FL"] <- "South"
brew.beerABVper$Region[brew.beerABVper$State == "GA"] <- "South"
brew.beerABVper$Region[brew.beerABVper$State == "SC"] <- "South"
brew.beerABVper$Region[brew.beerABVper$State == "NC"] <- "South"
brew.beerABVper$Region[brew.beerABVper$State == "VA"] <- "South"
brew.beerABVper$Region[brew.beerABVper$State == "WV"] <- "South"
brew.beerABVper$Region[brew.beerABVper$State == "MD"] <- "South"
brew.beerABVper$Region[brew.beerABVper$State == "DE"] <- "South"
brew.beerABVper$Region[brew.beerABVper$State == "WA"] <- "West"
brew.beerABVper$Region[brew.beerABVper$State == "OR"] <- "West"
brew.beerABVper$Region[brew.beerABVper$State == "CA"] <- "West"
brew.beerABVper$Region[brew.beerABVper$State == "AK"] <- "West"
brew.beerABVper$Region[brew.beerABVper$State == "HI"] <- "West"
brew.beerABVper$Region[brew.beerABVper$State == "AZ"] <- "West"
brew.beerABVper$Region[brew.beerABVper$State == "NV"] <- "West"
brew.beerABVper$Region[brew.beerABVper$State == "ID"] <- "West"
brew.beerABVper$Region[brew.beerABVper$State == "MT"] <- "West"
brew.beerABVper$Region[brew.beerABVper$State == "WY"] <- "West"
brew.beerABVper$Region[brew.beerABVper$State == "CO"] <- "West"
brew.beerABVper$Region[brew.beerABVper$State == "NM"] <- "West"
brew.beerABVper$Region[brew.beerABVper$State == "UT"] <- "West"
#glimpse(brew.beerABVper)
#glimpse(brew.beerABVper)
hchart(brew.beerABVper, "scatter", hcaes(x = IBU, y = ABVper, group = Region)) %>%
hc_legend(enabled = FALSE) %>%
hc_title(text = "Bitterness (IBU) vs Alcoholic Content (IBU)")
# There is a relationship between IBU and ABV. Based on this scatter plot and correlation line we can see a positive linear relationship. In general, we can confirm that when the ABV of a beer rises so will its IBU.
# Question 9: Here we will complete a full analysis of median IBU, average ABV, and popular style by region. We will then have a list of new beer releases by style and a range of IBU and ABVs that should be targeted moving forward by Budweiser in order to compete in the microbrewery market.
#glimpse(brew.beerABVper)
brew.beerSO <- filter(brew.beerABVper, Region == "South")
#brew.beerSO
beer.typeSO <- data.frame(table(brew.beerSO$Style))
#glimpse(beer.typeSO)
colnames(beer.typeSO) <- c("Type", "Count")
beer.typeSO$Type <- as.character(beer.typeSO$Type)
beer.typeSO$Count <- as.numeric(beer.typeSO$Count)
#glimpse(beer.typeSO)
#view(beer.typeSO)
topSOtype <- data.frame(beer.typeSO %>% top_n(5))
#view(topSOtype)
hctreemap2(topSOtype, group_vars = "Type",
size_var = "Count", color_var = "Count"
) %>%
hc_colorAxis(minColor = brewer.pal(7, "Reds")[1],
maxColor = brewer.pal(7, "Reds")[7]) %>%
hc_title(text = "Top 5 Beer Styles in the South")
list2.1 <- 1:5
list2.2 <- rep("South",length(list2.1))
topSOtype <- cbind(topSOtype, list2.2)
colnames(topSOtype) <- c("Type", "Count", "Region")
topSOtype$Region <- as.character(topSOtype$Region)
#glimpse(topSOtype)
#glimpse(brew.beerABVper)
brew.beerMW <- filter(brew.beerABVper, Region == "Midwest")
#brew.beerMW
beer.typeMW <- data.frame(table(brew.beerMW$Style))
#glimpse(beer.typeMW)
colnames(beer.typeMW) <- c("Type", "Count")
beer.typeMW$Type <- as.character(beer.typeMW$Type)
beer.typeMW$Count <- as.numeric(beer.typeMW$Count)
#glimpse(beer.typeMW)
#view(beer.typeMW)
topMWtype <- data.frame(beer.typeMW %>% top_n(5))
#view(topMWtype)
hctreemap2(topMWtype, group_vars = "Type",
size_var = "Count", color_var = "Count"
) %>%
hc_colorAxis(minColor = brewer.pal(7, "Greys")[1],
maxColor = brewer.pal(7, "Greys")[7]) %>%
hc_title(text = "Top 5 Beer Styles in the Midwest")
list3.1 <- 1:5
list3.2 <- rep("Midwest",length(list3.1))
topMWtype <- cbind(topMWtype, list3.2)
colnames(topMWtype) <- c("Type", "Count", "Region")
topMWtype$Region <- as.character(topMWtype$Region)
#glimpse(topMWtype)
#glimpse(brew.beerABVper)
brew.beerWE <- filter(brew.beerABVper, Region == "West")
#brew.beerWE
beer.typeWE <- data.frame(table(brew.beerWE$Style))
#glimpse(beer.typeWE)
colnames(beer.typeWE) <- c("Type", "Count")
beer.typeWE$Type <- as.character(beer.typeWE$Type)
beer.typeWE$Count <- as.numeric(beer.typeWE$Count)
#glimpse(beer.typeWE)
#view(beer.typeWE)
topWEtype <- data.frame(beer.typeWE %>% top_n(5))
#view(topWEtype)
hctreemap2(topWEtype, group_vars = "Type",
size_var = "Count", color_var = "Count"
) %>%
hc_colorAxis(minColor = brewer.pal(7, "Blues")[1],
maxColor = brewer.pal(7, "Blues")[7]) %>%
hc_title(text = "Top 5 Beer Styles in the West")
list4.1 <- 1:5
list4.2 <- rep("West",length(list3.1))
topWEtype <- cbind(topWEtype, list3.2)
colnames(topWEtype) <- c("Type", "Count", "Region")
topWEtype$Region <- as.character(topWEtype$Region)
#glimpse(topWEtype)
#glimpse(brew.beerABVper)
brew.beerNE <- filter(brew.beerABVper, Region == "Northeast")
#brew.beerNE
beer.typeNE <- data.frame(table(brew.beerNE$Style))
#glimpse(beer.typeNE)
colnames(beer.typeNE) <- c("Type", "Count")
beer.typeNE$Type <- as.character(beer.typeNE$Type)
beer.typeNE$Count <- as.numeric(beer.typeNE$Count)
#glimpse(beer.typeNE)
#view(beer.typeNE)
topNEtype <- data.frame(beer.typeNE %>% top_n(5))
#view(topNEtype)
hctreemap2(topNEtype, group_vars = "Type",
size_var = "Count", color_var = "Count"
) %>%
hc_colorAxis(minColor = brewer.pal(7, "Oranges")[1],
maxColor = brewer.pal(7, "Oranges")[7]) %>%
hc_title(text = "Top 5 Beer Styles in the Northeast")
list1.1 <- 1:5
list1.2 <- rep("Northeast",length(list1.1))
topNEtype <- cbind(topNEtype, list1.2)
colnames(topNEtype) <- c("Type", "Count", "Region")
topNEtype$Region <- as.character(topNEtype$Region)
#glimpse(topNEtype)
topTypeRegion <- rbind(topMWtype, topSOtype, topNEtype, topWEtype)
#view(topTypeRegion)
hctreemap2(topTypeRegion, group_vars = "Type",
size_var = "Count", color_var = "Count") %>%
hc_colorAxis(minColor = brewer.pal(7, "Greens")[1],
maxColor = brewer.pal(7, "Greens")[7]) %>%
hc_title(text = "Top 6 Beer Styles in the US")
#glimpse(brew.beerABVper)
#view(brew.beerABVper)
bbABVper.clean <- brew.beerABVper %>% filter(!is.na(brew.beerABVper$ABVper))
#bbABVper.clean
bbABVper.cleanmea <- aggregate(bbABVper.clean$ABVper, by=list(bbABVper.clean$Region), FUN = mean)
colnames(bbABVper.cleanmea) <- c("Region", "MeanABV")
bbABVper.cleanmea$MeanABV <- round(bbABVper.cleanmea$MeanABV, 2)
#bbABVper.cleanmea
hchart(bbABVper.cleanmea, "column", hcaes(x = Region, y = MeanABV)) %>%
hc_title(text = "Average ABV by Region") %>%
hc_add_theme(hc_theme_google())
#glimpse(brew.beerABVper)
#view(brew.beerABVper)
bbIBU.clean <- brew.beerABVper %>% filter(!is.na(brew.beerABVper$IBU))
#bbIBU.clean
bbIBU.cleanmed <- aggregate(bbIBU.clean$IBU, by=list(bbIBU.clean$Region), FUN = median)
colnames(bbIBU.cleanmed) <- c("Region", "MedianIBU")
#bbIBU.cleanmed
#bbIBU.clean
bbIBU.cleanmea <- aggregate(bbIBU.clean$IBU, by=list(bbIBU.clean$Region), FUN = mean)
colnames(bbIBU.cleanmea) <- c("Region", "MeanIBU")
#bbIBU.cleanmea
hchart(bbIBU.cleanmed, "column", hcaes(x = Region, y = MedianIBU)) %>%
hc_title(text = "Median IBU by Region") %>%
hc_add_theme(hc_theme_google())
# We have performed a full k-nearest neighbor (KNN) analysis on our data. In order to do this, we have identified, classified, and imputed the missing data in order to keep from losing over half of our data set after our full join. This has allowed us to have more confidence in our model.
invisible(pMiss <- function(x){sum(is.na(x))/length(x)*100})
invisible(apply(brew.beer,2,pMiss))
invisible(apply(brew.beer,1,pMiss))
aggr.brew.beer <- aggr(brew.beer, labels=names(brew.beer),
cex.axis=.7, gap=3, ylab=c("Histogram of Missing Data","Pattern"))
#marginplot(brew.beer[,c("ABV","IBU")])
md.pattern(brew.beer)
invisible(brew.beer.impute <- mice(brew.beer[,c("Beer_ID","ABV","IBU")],m=5,maxit=50,meth='pmm',seed=100))
#summary(brew.beer.impute)
invisible(brew.beer.impute$imp$ABV) #check the imputed data ABV
invisible(brew.beer.impute$imp$IBU) # check the imputed data IBU
invisible(brew.beer.draft <- complete(brew.beer.impute,1))  # Complete impute dataset
#view(brew.beer.draft)
brew.beer.draft <- brew.beer.draft %>% dplyr::rename(ABV.New = ABV)
brew.beer.draft <- brew.beer.draft %>% dplyr::rename(IBU.New = IBU)
brew.beer.New <- full_join(brew.beer, brew.beer.draft, by = "Beer_ID")
#view(brew.beer.New)
#styles <- unique(brew.beer.New$Style)
#view(styles)
Ales.beer <- cbind(brew.beer.New, type='Ales', stringsAsFactors=F) %>% filter(grepl('\\bale\\b', Style, ignore.case=T))
IPA.beer <- cbind(brew.beer.New, type='IPA', stringsAsFactors=F) %>% filter(grepl('\\bIPA\\b', Style, ignore.case=T))
IPA.Ales <- union(Ales.beer, IPA.beer)
IPA.Ales$type <- as.factor(IPA.Ales$type)
set.seed(5)
splitPerc = .7
iterations = 250
numks = 100
masterAcc = matrix(nrow = iterations, ncol = numks)
for(j in 1:iterations) {
accs = data.frame(accuracy = numeric(numks), k = numeric(numks))
trainIndices = sample(1:dim(IPA.Ales)[1],round(splitPerc * dim(IPA.Ales)[1]))
train = IPA.Ales[trainIndices,]
test = IPA.Ales[-trainIndices,]
for(i in 1:numks) {
classifications = knn(train[,c('IBU.New','ABV.New')],test[,c('IBU.New','ABV.New')],as.factor(train$type), prob = TRUE, k = i)
table(as.factor(test$type),classifications)
CM = confusionMatrix(table(as.factor(test$type),classifications))
masterAcc[j,i] = CM$overall[1]
}
}
MeanAcc = colMeans(masterAcc)
invisible(plot(seq(1,numks,1),MeanAcc, type = "l"))
k <- which.max(MeanAcc)
install.packages(c("boot", "car", "digest", "foreign", "haven", "hexbin", "hms", "jomo", "jpeg", "KernSmooth", "mgcv", "nlme", "openxlsx", "plotly", "prodlim", "quantreg", "Rcpp", "rlang", "rvest", "sp", "survival", "testthat", "tinytex"))
